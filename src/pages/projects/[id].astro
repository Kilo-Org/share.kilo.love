---
import Layout from '../../layouts/Layout.astro';
import type { GetStaticPaths } from 'astro';

import type { GitHubDiscussion } from '../../types/github';

export const getStaticPaths: GetStaticPaths = async () => {
  try {
    // Fetch all discussions to generate static paths
    const response = await fetch(`${import.meta.env.SITE || 'http://localhost:4321'}/api/discussions?limit=100`);
    const data = await response.json();
    
    if (response.ok && data.discussions) {
      return data.discussions.map((discussion: GitHubDiscussion) => ({
        params: { id: discussion.number.toString() },
        props: { discussion }
      }));
    }
    
    console.error('Failed to fetch discussions for static paths:', data.error);
    return [];
  } catch (error) {
    console.error('Error generating static paths:', error);
    return [];
  }
};

interface Props {
  discussion?: GitHubDiscussion;
}

// Try to get discussion from props first (static generation)
let { discussion }: Props = Astro.props;

// If not available in props, fetch it dynamically (fallback for new discussions)
if (!discussion) {
  const { id } = Astro.params;
  
  if (id) {
    try {
      const response = await fetch(`${Astro.url.origin}/api/discussions/number/${id}`);
      const data = await response.json();
      
      if (response.ok && data.discussion) {
        discussion = data.discussion;
      } else {
        // Discussion not found, redirect to 404
        return Astro.redirect('/404');
      }
    } catch (error) {
      console.error('Error fetching discussion:', error);
      return Astro.redirect('/404');
    }
  } else {
    return Astro.redirect('/404');
  }
}

// At this point, discussion should be defined
if (!discussion) {
  return Astro.redirect('/404');
}

// Format date for display
const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Extract first image from body HTML for preview
const extractFirstImage = (html: string) => {
  const imgMatch = html.match(/<img[^>]+src="([^"]+)"[^>]*>/);
  return imgMatch ? imgMatch[1] : null;
};

const firstImage = extractFirstImage(discussion.bodyHTML);
---

<Layout title={`${discussion.title} - Kilo Code Project`}>
  <main>
    <div class="bg-white">
      <!-- Header Section -->
      <div class="relative isolate overflow-hidden bg-gradient-to-b from-indigo-100/20 pt-14">
        <div class="mx-auto max-w-7xl px-6 py-32 sm:py-40 lg:px-8">
          <div class="mx-auto max-w-2xl lg:mx-0 lg:grid lg:max-w-none lg:grid-cols-2 lg:gap-x-16 lg:gap-y-6 xl:grid-cols-1 xl:grid-rows-1 xl:gap-x-8">
            <h1 class="max-w-2xl text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl lg:col-span-2 xl:col-auto">
              {discussion.title}
            </h1>
            <div class="mt-6 max-w-xl lg:mt-0 xl:col-end-1 xl:row-start-1">
              <p class="text-lg leading-8 text-gray-600">
                A community project shared on GitHub Discussions by {discussion.author.login}
              </p>
              <div class="mt-10 flex items-center gap-x-6">
                <a
                  href={discussion.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                >
                  View on GitHub
                </a>
                <a href="/projects" class="text-sm font-semibold leading-6 text-gray-900">
                  Back to Projects <span aria-hidden="true">→</span>
                </a>
              </div>
            </div>
            {firstImage && (
              <img
                src={firstImage}
                alt={`Preview of ${discussion.title}`}
                class="mt-10 aspect-[6/5] w-full max-w-lg rounded-2xl object-cover sm:mt-16 lg:mt-0 lg:max-w-none xl:row-span-2 xl:row-end-2 xl:mt-36"
              />
            )}
          </div>
        </div>
        <div class="absolute inset-x-0 bottom-0 -z-10 h-24 bg-gradient-to-t from-white sm:h-32"></div>
      </div>

      <!-- Project Details -->
      <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <div class="mx-auto max-w-2xl lg:mx-0">
          <div class="py-16">
            <!-- Metadata -->
            <div class="flex items-center gap-x-4 text-xs">
              <time datetime={discussion.createdAt} class="text-gray-500">
                Created {formatDate(discussion.createdAt)}
              </time>
              {discussion.updatedAt !== discussion.createdAt && (
                <time datetime={discussion.updatedAt} class="text-gray-500">
                  Updated {formatDate(discussion.updatedAt)}
                </time>
              )}
            </div>

            <!-- Author Info -->
            <div class="mt-8 flex items-center gap-x-4">
              <img
                src={discussion.author.avatarUrl}
                alt={discussion.author.login}
                class="h-10 w-10 rounded-full bg-gray-50"
              />
              <div class="text-sm leading-6">
                <p class="font-semibold text-gray-900">
                  <a href={discussion.author.url} target="_blank" rel="noopener noreferrer">
                    {discussion.author.login}
                  </a>
                </p>
                <p class="text-gray-600">Project Author</p>
              </div>
            </div>

            <!-- Labels -->
            {discussion.labels.nodes.length > 0 && (
              <div class="mt-8">
                <h3 class="text-sm font-medium text-gray-900 mb-3">Tags</h3>
                <div class="flex flex-wrap gap-2">
                  {discussion.labels.nodes.map((label) => (
                    <span
                      class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset"
                      style={`background-color: #${label.color}20; color: #${label.color}; border-color: #${label.color}40;`}
                    >
                      {label.name}
                    </span>
                  ))}
                </div>
              </div>
            )}

            <!-- Engagement Stats -->
            <div class="mt-8 flex items-center gap-x-6 text-sm text-gray-500">
              <div class="flex items-center gap-x-2">
                <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z" />
                </svg>
                <span>{discussion.comments.totalCount} comments</span>
              </div>
              <div class="flex items-center gap-x-2">
                <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M6.633 10.5c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75A2.25 2.25 0 0116.5 4.5c0 1.152-.26 2.243-.723 3.218-.266.558-.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-.971a6.043 6.043 0 01-4.276-5.816A6.052 6.052 0 016.633 10.5z" />
                </svg>
                <span>{discussion.upvoteCount || 0} upvotes</span>
              </div>
            </div>

            <!-- Project Description -->
            <div class="mt-12">
              <h2 class="text-2xl font-bold tracking-tight text-gray-900 mb-6">About This Project</h2>
              <div 
                class="prose prose-gray max-w-none prose-headings:text-gray-900 prose-a:text-indigo-600 prose-a:no-underline hover:prose-a:underline"
                set:html={discussion.bodyHTML}
              />
            </div>

            <!-- Call to Action -->
            <div class="mt-16 rounded-2xl bg-gray-50 p-8">
              <div class="mx-auto max-w-xl text-center">
                <h3 class="text-xl font-semibold text-gray-900">Interested in this project?</h3>
                <p class="mt-2 text-gray-600">
                  Join the discussion on GitHub to ask questions, provide feedback, or collaborate with the author.
                </p>
                <div class="mt-6 flex items-center justify-center gap-x-4">
                  <a
                    href={discussion.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="rounded-md bg-indigo-600 px-4 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                  >
                    Join Discussion
                  </a>
                  <a
                    href={discussion.author.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-sm font-semibold text-gray-900 hover:text-gray-700"
                  >
                    View Author Profile <span aria-hidden="true">→</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  /* Custom styles for the discussion content */
  .prose img {
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  }
  
  .prose pre {
    background-color: rgb(17 24 39);
    color: rgb(243 244 246);
    border-radius: 0.5rem;
  }
  
  .prose code {
    background-color: rgb(243 244 246);
    color: rgb(17 24 39);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
  }
  
  .prose pre code {
    background-color: transparent;
    color: rgb(243 244 246);
    padding: 0;
  }
</style>